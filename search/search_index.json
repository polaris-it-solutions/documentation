{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Polaris Documentation Getting Started Security Setup Home","title":"Home"},{"location":"#welcome-to-polaris-documentation","text":"Getting Started Security Setup Home","title":"Welcome to Polaris Documentation"},{"location":"company-policies/","text":"Documentation Guidelines Your content here","title":"Company Policies"},{"location":"company-policies/#documentation-guidelines","text":"Your content here","title":"Documentation Guidelines"},{"location":"getting-started/","text":"Getting Started Welcome to Polaris Solutions Documentation! Repository Setup Clone the repo: ```bash git clone git@github.com:polaris-it-solutions/documentation.git","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"Welcome to Polaris Solutions Documentation!","title":"Getting Started"},{"location":"getting-started/#repository-setup","text":"Clone the repo: ```bash git clone git@github.com:polaris-it-solutions/documentation.git","title":"Repository Setup"},{"location":"home/","text":"Welcome to Polaris IT Solutions Inc. Your content here","title":"Welcome to Polaris IT Solutions Inc."},{"location":"home/#welcome-to-polaris-it-solutions-inc","text":"Your content here","title":"Welcome to Polaris IT Solutions Inc."},{"location":"polaris-it-solutions-inc/","text":"Polaris IT Solutions Inc. Your content here","title":"Polaris Overview"},{"location":"polaris-it-solutions-inc/#polaris-it-solutions-inc","text":"Your content here","title":"Polaris IT Solutions Inc."},{"location":"Wiki/amazon-aws/","text":"Header Your content here","title":"Amazon AWS Wiki"},{"location":"Wiki/amazon-aws/#header","text":"Your content here","title":"Header"},{"location":"Wiki/cloudflare/","text":"Header Your content here","title":"Cloudflare Wiki"},{"location":"Wiki/cloudflare/#header","text":"Your content here","title":"Header"},{"location":"Wiki/docker/","text":"Header Your content here","title":"Docker Infrastructure Wiki"},{"location":"Wiki/docker/#header","text":"Your content here","title":"Header"},{"location":"Wiki/erpnext/","text":"Deploying Docker containers Step 1: Create the stack. Start with only the DB and volumes. Remove the health check and comment. Let the container run for 5 minutes. It should show \u201cWaiting for Connection\u201d. Step 2: Add all Redis, Configurator and Create-Site containers, and update the stack. Monitor the logs of Create-Site until installation has completed. Once done, the Create-Site and Configurator containers will both change status to Completed. Step 3: Copy and paste all stack config, and update the stack. Ensure to change the port. Monitor the stack. After 2 minutes, the site should be up, and reachable. version: \"3\" services: backend: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs configurator: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: none entrypoint: - bash - -c command: - > ls -1 apps > sites/apps.txt; bench set-config -g db_host $$DB_HOST; bench set-config -gp db_port $$DB_PORT; bench set-config -g redis_cache \"redis://$$REDIS_CACHE\"; bench set-config -g redis_queue \"redis://$$REDIS_QUEUE\"; bench set-config -g redis_socketio \"redis://$$REDIS_SOCKETIO\"; bench set-config -gp socketio_port $$SOCKETIO_PORT; environment: DB_HOST: db DB_PORT: \"3306\" REDIS_CACHE: redis-cache:6379 REDIS_QUEUE: redis-queue:6379 REDIS_SOCKETIO: redis-socketio:6379 SOCKETIO_PORT: \"9000\" volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs create-site: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: none volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs entrypoint: - bash - -c command: - > wait-for-it -t 120 db:3306; wait-for-it -t 120 redis-cache:6379; wait-for-it -t 120 redis-queue:6379; wait-for-it -t 120 redis-socketio:6379; export start=`date +%s`; until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".db_host // empty\"` ]] && \\ [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".redis_cache // empty\"` ]] && \\ [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".redis_queue // empty\"` ]]; do echo \"Waiting for sites/common_site_config.json to be created\"; sleep 5; if (( `date +%s`-start > 120 )); then echo \"could not find sites/common_site_config.json with required keys\"; exit 1 fi done; echo \"sites/common_site_config.json found\"; bench new-site frontend --no-mariadb-socket --admin-password=admin --db-root-password=admin --install-app erpnext --set-default; db: image: mariadb:10.6 healthcheck: test: mysqladmin ping -h localhost --password=admin interval: 1s retries: 15 deploy: restart_policy: condition: on-failure command: - --character-set-server=utf8mb4 - --collation-server=utf8mb4_unicode_ci - --skip-character-set-client-handshake - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6 environment: MYSQL_ROOT_PASSWORD: admin volumes: - db-data:/var/lib/mysql frontend: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - nginx-entrypoint.sh environment: BACKEND: backend:8000 FRAPPE_SITE_NAME_HEADER: frontend SOCKETIO: websocket:9000 UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1 UPSTREAM_REAL_IP_HEADER: X-Forwarded-For UPSTREAM_REAL_IP_RECURSIVE: \"off\" PROXY_READ_TIMOUT: 120 CLIENT_MAX_BODY_SIZE: 50m volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs ports: - \"9081:8080\" queue-default: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - default volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs queue-long: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - long volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs queue-short: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - short volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs redis-queue: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-queue-data:/data redis-cache: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-cache-data:/data redis-socketio: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-socketio-data:/data scheduler: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - schedule volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs websocket: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - node - /home/frappe/frappe-bench/apps/frappe/socketio.js volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs volumes: db-data: redis-queue-data: redis-cache-data: redis-socketio-data: sites: logs: Adding apps to ERPNext Building the image git clone Set environment variables Docker build","title":"ERPNext Wiki"},{"location":"Wiki/erpnext/#deploying-docker-containers","text":"Step 1: Create the stack. Start with only the DB and volumes. Remove the health check and comment. Let the container run for 5 minutes. It should show \u201cWaiting for Connection\u201d. Step 2: Add all Redis, Configurator and Create-Site containers, and update the stack. Monitor the logs of Create-Site until installation has completed. Once done, the Create-Site and Configurator containers will both change status to Completed. Step 3: Copy and paste all stack config, and update the stack. Ensure to change the port. Monitor the stack. After 2 minutes, the site should be up, and reachable. version: \"3\" services: backend: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs configurator: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: none entrypoint: - bash - -c command: - > ls -1 apps > sites/apps.txt; bench set-config -g db_host $$DB_HOST; bench set-config -gp db_port $$DB_PORT; bench set-config -g redis_cache \"redis://$$REDIS_CACHE\"; bench set-config -g redis_queue \"redis://$$REDIS_QUEUE\"; bench set-config -g redis_socketio \"redis://$$REDIS_SOCKETIO\"; bench set-config -gp socketio_port $$SOCKETIO_PORT; environment: DB_HOST: db DB_PORT: \"3306\" REDIS_CACHE: redis-cache:6379 REDIS_QUEUE: redis-queue:6379 REDIS_SOCKETIO: redis-socketio:6379 SOCKETIO_PORT: \"9000\" volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs create-site: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: none volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs entrypoint: - bash - -c command: - > wait-for-it -t 120 db:3306; wait-for-it -t 120 redis-cache:6379; wait-for-it -t 120 redis-queue:6379; wait-for-it -t 120 redis-socketio:6379; export start=`date +%s`; until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".db_host // empty\"` ]] && \\ [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".redis_cache // empty\"` ]] && \\ [[ -n `grep -hs ^ sites/common_site_config.json | jq -r \".redis_queue // empty\"` ]]; do echo \"Waiting for sites/common_site_config.json to be created\"; sleep 5; if (( `date +%s`-start > 120 )); then echo \"could not find sites/common_site_config.json with required keys\"; exit 1 fi done; echo \"sites/common_site_config.json found\"; bench new-site frontend --no-mariadb-socket --admin-password=admin --db-root-password=admin --install-app erpnext --set-default; db: image: mariadb:10.6 healthcheck: test: mysqladmin ping -h localhost --password=admin interval: 1s retries: 15 deploy: restart_policy: condition: on-failure command: - --character-set-server=utf8mb4 - --collation-server=utf8mb4_unicode_ci - --skip-character-set-client-handshake - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6 environment: MYSQL_ROOT_PASSWORD: admin volumes: - db-data:/var/lib/mysql frontend: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - nginx-entrypoint.sh environment: BACKEND: backend:8000 FRAPPE_SITE_NAME_HEADER: frontend SOCKETIO: websocket:9000 UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1 UPSTREAM_REAL_IP_HEADER: X-Forwarded-For UPSTREAM_REAL_IP_RECURSIVE: \"off\" PROXY_READ_TIMOUT: 120 CLIENT_MAX_BODY_SIZE: 50m volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs ports: - \"9081:8080\" queue-default: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - default volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs queue-long: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - long volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs queue-short: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - worker - --queue - short volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs redis-queue: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-queue-data:/data redis-cache: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-cache-data:/data redis-socketio: image: redis:6.2-alpine deploy: restart_policy: condition: on-failure volumes: - redis-socketio-data:/data scheduler: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - bench - schedule volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs websocket: image: frappe/erpnext:v14.18.3 deploy: restart_policy: condition: on-failure command: - node - /home/frappe/frappe-bench/apps/frappe/socketio.js volumes: - sites:/home/frappe/frappe-bench/sites - logs:/home/frappe/frappe-bench/logs volumes: db-data: redis-queue-data: redis-cache-data: redis-socketio-data: sites: logs:","title":"Deploying Docker containers"},{"location":"Wiki/erpnext/#adding-apps-to-erpnext","text":"","title":"Adding apps to ERPNext"},{"location":"Wiki/erpnext/#building-the-image","text":"git clone Set environment variables Docker build","title":"Building the image"},{"location":"Wiki/hostinger/","text":"Header Your content here","title":"Hostinger Website Hosting Wiki"},{"location":"Wiki/hostinger/#header","text":"Your content here","title":"Header"},{"location":"Wiki/kimai/","text":"Introduction Kimai is a time tracking system that Polaris IT Solutions Inc. uses for tracking hours spent per customer, and billing purposes. This system is also used for internal billing between companies under the WBHS Group. Kimai can be used on Web, Desktop or Mobile. Customer Tracking Specifications Carefully select the Project and Activity based on the customer and task to complete Koruna Assist Field Name Description Billable? Rate Kimai Project Koruna Assist Non SLA IT Support Any support requests outside of business hours, with appropriate approval from Koruna Assist and Polaris Solutions Activity Koruna Assist Out of SLA User Support Default option for Koruna Assist Non SLA IT Support for any support requests outside of business hours Yes TBA Yes Project Koruna Assist SLA IT Support Any support requests in normal business hours (07:00 - 16:00, Mon - Fri) Activity Koruna Assist Computer Setup Computer setup within business hours No N/A Yes Activity Koruna Assist SLA User Support User support within business hours No N/A No* * All Koruna Assist tickets must be logged in the Help Desk system Refer to customer SLA for further details Kaesim Cybersecurity Field Name Description Billable? Rate* Kimai Project Kaesim Non SLA User Support Any user support which does not include the Polaris Solutions RMM & VPN service Activity Kaesim Non SLA User Support Any user support which does not include the Polaris Solutions RMM & VPN service within business hours. Support out of business hours must be approved by Kaesim Cybersecurity and Polaris Solutions and rate agreed. Yes 529 Yes Project Kaesim SLA IT Support Any user setup and support which includes the Polaris Solutions RMM & VPN service Activity Kaesim SLA User Setup User setup on Kaesim infrastructure and Polaris RMM & VPN services Yes 445 Yes Activity Kaesim SLA User Support User support within business hours No** N/A Yes * Rate is changeable depending on the monthly AUD to PHP conversion rate ** User support up to 20 hours per month is included. Refer to the Kaesim User List Refer to customer SLA for further details User Time Tracking Referring to the table above, time tracking should be done according to the support request Web Application To start time tracking, open the browser and navigate to https://time.wbhsgroup.com and login with the credentials provided. Kimai Home Screen To start a new time recording, click the play button on the top right of the page and fill in the relevant customer information based on the ticket logged. Do not enter To or Duration as they will auto calculate at the end of the session. Click save Time Tracking log creation Once the ticket has been resolved, and ticket updated and closed, click on the Stop icon at the top right of the screen to conclude the time tracking Stopping Time Tracking Mobile Application Desktop Application Team Lead Functions Creating Customers Creating Projects Creating Activities Reporting Administrative Functions Creating User Accounts Creating Customer User Accounts","title":"Kimai Wiki"},{"location":"Wiki/kimai/#introduction","text":"Kimai is a time tracking system that Polaris IT Solutions Inc. uses for tracking hours spent per customer, and billing purposes. This system is also used for internal billing between companies under the WBHS Group. Kimai can be used on Web, Desktop or Mobile.","title":"Introduction"},{"location":"Wiki/kimai/#customer-tracking-specifications","text":"Carefully select the Project and Activity based on the customer and task to complete","title":"Customer Tracking Specifications"},{"location":"Wiki/kimai/#koruna-assist","text":"Field Name Description Billable? Rate Kimai Project Koruna Assist Non SLA IT Support Any support requests outside of business hours, with appropriate approval from Koruna Assist and Polaris Solutions Activity Koruna Assist Out of SLA User Support Default option for Koruna Assist Non SLA IT Support for any support requests outside of business hours Yes TBA Yes Project Koruna Assist SLA IT Support Any support requests in normal business hours (07:00 - 16:00, Mon - Fri) Activity Koruna Assist Computer Setup Computer setup within business hours No N/A Yes Activity Koruna Assist SLA User Support User support within business hours No N/A No* * All Koruna Assist tickets must be logged in the Help Desk system Refer to customer SLA for further details","title":"Koruna Assist"},{"location":"Wiki/kimai/#kaesim-cybersecurity","text":"Field Name Description Billable? Rate* Kimai Project Kaesim Non SLA User Support Any user support which does not include the Polaris Solutions RMM & VPN service Activity Kaesim Non SLA User Support Any user support which does not include the Polaris Solutions RMM & VPN service within business hours. Support out of business hours must be approved by Kaesim Cybersecurity and Polaris Solutions and rate agreed. Yes 529 Yes Project Kaesim SLA IT Support Any user setup and support which includes the Polaris Solutions RMM & VPN service Activity Kaesim SLA User Setup User setup on Kaesim infrastructure and Polaris RMM & VPN services Yes 445 Yes Activity Kaesim SLA User Support User support within business hours No** N/A Yes * Rate is changeable depending on the monthly AUD to PHP conversion rate ** User support up to 20 hours per month is included. Refer to the Kaesim User List Refer to customer SLA for further details","title":"Kaesim Cybersecurity"},{"location":"Wiki/kimai/#user-time-tracking","text":"Referring to the table above, time tracking should be done according to the support request","title":"User Time Tracking"},{"location":"Wiki/kimai/#web-application","text":"To start time tracking, open the browser and navigate to https://time.wbhsgroup.com and login with the credentials provided. Kimai Home Screen To start a new time recording, click the play button on the top right of the page and fill in the relevant customer information based on the ticket logged. Do not enter To or Duration as they will auto calculate at the end of the session. Click save Time Tracking log creation Once the ticket has been resolved, and ticket updated and closed, click on the Stop icon at the top right of the screen to conclude the time tracking Stopping Time Tracking","title":"Web Application"},{"location":"Wiki/kimai/#mobile-application","text":"","title":"Mobile Application"},{"location":"Wiki/kimai/#desktop-application","text":"","title":"Desktop Application"},{"location":"Wiki/kimai/#team-lead-functions","text":"","title":"Team Lead Functions"},{"location":"Wiki/kimai/#creating-customers","text":"","title":"Creating Customers"},{"location":"Wiki/kimai/#creating-projects","text":"","title":"Creating Projects"},{"location":"Wiki/kimai/#creating-activities","text":"","title":"Creating Activities"},{"location":"Wiki/kimai/#reporting","text":"","title":"Reporting"},{"location":"Wiki/kimai/#administrative-functions","text":"","title":"Administrative Functions"},{"location":"Wiki/kimai/#creating-user-accounts","text":"","title":"Creating User Accounts"},{"location":"Wiki/kimai/#creating-customer-user-accounts","text":"","title":"Creating Customer User Accounts"},{"location":"Wiki/openproject/","text":"Introduction OpenProject is our comprehensive open-source solution for efficient project management and collaboration. With features like task management, Agile support, real-time communication, and powerful reporting, OpenProject empowers our teams to plan, execute, and succeed in projects of all sizes. Streamline your project workflows, enhance collaboration, and achieve your project goals with our OpenProject platform. This documentation is a comprehensive guide to using OpenProject effectively. Whether you're new to the platform or looking to expand your knowledge, you'll find step-by-step instructions, best practices, and tips to make the most of OpenProject's features. Getting Started Login to the web interface with the provided credentials to view your home page. From here you can see some of the projects you're owner of or part of, and can select which project you would like to work on. Overview Pages OpenProject home page Click on Select a project on the top left side to see the list of projects you own, or are part of, or to create a new project. You may also select to view the list of projects, which will redirect you to a dedicated page listing all projects. The bell icon at the top right allows you to see notifications against your name, such as assigned projects or tasks, changes to tasks you're associated with or are owner of, and any other activity against the tasks. You may expand the item to view more information, as well as Unwatch, Mark as read, make changes to the Assignee, Accountable person and time tracking, as well as other quick actions. On the left side you can see some filters under the Reason section, as well as filter to unread notifications based on the project name Notifications center When selecting a project, you will be brought to the Project Overview screen, where you will be able to quick view the Project description, Status, Details, Members and their roles, and an overview of the Work Packages. Default view of the Work is Type, where you can view number of open or closed work packages. The filter can be changed to show WOrk Package overview of Status, Priority, Author and Assignee. The menu bar on the left allows you to jump to the project working pages, such as Work packages, Time and costs, Members and project settings. The most common page to be working on is the Work packages page Project Overview Projects can be created under another project, for example: If there is large project, it may have multiple sub projects needing to be completed before the overall project can be closed. Sub projects appear indented on the project quick select menu. All sub projects will have their own work packages needing to be completed to close the sub project. A project can also be converted to a template if needed. Example: there are multiple construction projects to be initiated, all including similar work packages, create the one, convert to template and make copies of it for all of the construction projects. They will then all have the same work packages. Each project will be managed separately, and additional work packages can be added to them, or removed from them, based on the project needs. Project quick select list Working on a project Select the project you wish to work on, and select the Work Packages menu. The Project Work packages screen opens. On this page, you can see all work packages as well as their child tasks, status, Assignee and Priority. You will now be able to Add, remove or update work packages. You can change the view depending on your needs, and you can create your own views. From this page you can quickly add work packages from the bottom of the page by clicking on Create new work package, or click on Create and select the Work package type to edit in full screen view. You can quickly edit most fields by clicking into the one you want to edit, and the field will become active to editing. It is recommended to add the Progress %, Start Date and End Date fields to the view for faster viewing and editing from within the page. Member Assignment Project Settings Terminologies Work Package: A work package is a general term for any task, activity, or item that requires attention within a project. Work packages can represent different types of work, such as tasks, phases, milestones, features, epics, user stories, and bugs. Phase: A phase is a distinct stage or segment of a project's lifecycle. It represents a grouping of related tasks or activities that must be completed before moving on to the next stage. Phases help in organizing and structuring a project's timeline and progress. Milestone: A milestone is a significant event or achievement in a project. It marks a specific point in time or the completion of a critical task. Milestones are often used to track progress and key project dates. Task: A task is a specific action or activity that needs to be completed to achieve a project's objectives. Tasks are usually smaller, manageable units of work that contribute to the overall project progress. Feature: A feature is a high-level functionality or capability that a software or product should have. Features are often used in software development projects to describe the desired functionalities. Epic: An epic is a large, overarching project or initiative that is typically broken down into smaller, more manageable user stories or tasks. Epics help in organizing and prioritizing work in agile project management. User Story: A user story is a user-centric requirement or description of a specific functionality from an end-user's perspective. User stories are commonly used in agile development to define and prioritize work items. Bug: A bug is an issue or problem within a software application that needs to be fixed. Bugs can be reported, tracked, and resolved as work packages to ensure the software's quality and stability. Gantt Chart: Gantt charts in OpenProject provide a visual representation of project timelines and dependencies. Users can create, edit, and customize Gantt charts to plan and schedule tasks and milestones. Dependencies between tasks are indicated by arrows, helping users understand task sequencing. Agile Project Management: OpenProject supports Agile methodologies like Scrum and Kanban. Agile boards allow teams to manage work in progress (WIP), prioritize tasks, and plan sprints. Backlogs store and prioritize user stories or tasks for future iterations. Discussions: Discussions are collaborative threads where team members can exchange ideas, seek clarification, or discuss project-related topics. Users can attach documents and mention others to involve specific team members in the discussion. Discussions are archived for reference, fostering knowledge sharing. Forums: Forums serve as broader discussion areas for project teams or departments. They are ideal for announcements, general updates, and team-wide conversations. Users can subscribe to forums to receive notifications about new posts. Time Tracking: Time tracking in OpenProject allows users to record hours worked on tasks and work packages. Users can specify the date, time spent, and a description of the work done. Time tracking data is useful for project costing, resource allocation, and progress analysis. Custom Fields: Custom fields enable users to tailor work packages and projects to their organization's specific needs. Fields can be created for different data types, such as text, numeric, date, or list fields. Custom fields can be used for tracking unique project-related information. Workflows: Workflows define the life cycle stages of work packages and how they transition from one stage to another. Users can customize workflows to match their project management processes. Workflow automation helps ensure consistency in project execution. User Roles and Permissions: OpenProject defines various user roles, including administrators, project managers, and members. Each role has specific permissions and access levels, ensuring appropriate access to features and data. Roles and permissions can be configured to align with your organization's hierarchy. Collaboration and Communication Time Tracking and Reporting Web Time Tracking Mobile Application Time Tracking Google Play Store From Google Play store, search for Open Time Tracker and install the app Google Play Store app Open the app and select Configure Instance. Enter https://projects.wbhsgroup.com as the Base URL and enter the Client ID: VMHppmbUEeWMgPcbpJv1WIeqxRCAJLkPEj3STCaoPdg You will then be requested to login with your OpenProject username and password. Reporting User Management and Permissions Integration and Plugins Deployment OpenProject has been deployed on Docker Swarm as a stack. Make sure to define the Volumes first version: \"3.7\" networks: frontend: backend: volumes: pgdata: driver: local driver_opts: type: 'none' device: '/mnt/glusterfs/projects/pgdata/' # Replace this with the local directory you want to mount o: 'bind' opdata: driver: local driver_opts: type: 'none' device: '/mnt/glusterfs/projects/opdata/' # Replace this with the local directory you want to mount o: 'bind' x-op-restart-policy: &restart_policy restart: unless-stopped x-op-image: &image image: openproject/community:13.0.3 x-op-app: &app <<: [*image, *restart_policy] environment: OPENPROJECT_HTTPS: \"${OPENPROJECT_HTTPS:-true}\" OPENPROJECT_HOST__NAME: \"${OPENPROJECT_HOST__NAME:-projects.wbhsgroup.com}\" OPENPROJECT_HSTS: \"${OPENPROJECT_HSTS:-true}\" RAILS_CACHE_STORE: \"memcache\" OPENPROJECT_CACHE__MEMCACHE__SERVER: \"cache:11211\" OPENPROJECT_RAILS__RELATIVE__URL__ROOT: \"${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}\" DATABASE_URL: \"${DATABASE_URL:-postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true}\" RAILS_MIN_THREADS: ${RAILS_MIN_THREADS:-4} RAILS_MAX_THREADS: ${RAILS_MAX_THREADS:-16} IMAP_ENABLED: \"${IMAP_ENABLED:-true}\" volumes: - \"${OPDATA:-opdata}:/var/openproject/assets\" services: db: image: postgres:13.10 <<: *restart_policy stop_grace_period: \"3s\" volumes: - \"${PGDATA:-pgdata}:/var/lib/postgresql/data\" environment: POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-p4ssw0rd} POSTGRES_DB: openproject networks: - backend cache: image: memcached <<: *restart_policy networks: - backend proxy: <<: [*image, *restart_policy] command: \"./docker/prod/proxy\" ports: - \"${PORT:-8080}:80\" environment: APP_HOST: web OPENPROJECT_RAILS__RELATIVE__URL__ROOT: \"${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}\" OPENPROJECT_HOST__NAME: \"projects.wbhsgroup.com\" depends_on: - web networks: - frontend web: <<: *app command: \"./docker/prod/web\" networks: - frontend - backend depends_on: - db - cache - seeder labels: - autoheal=true healthcheck: test: [\"CMD\", \"curl\", \"-f\", \"http://projects.wbhsgroup.com:8080${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}/health_checks/default\"] interval: 10s timeout: 3s retries: 3 start_period: 30s autoheal: image: willfarrell/autoheal:1.2.0 volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" environment: AUTOHEAL_CONTAINER_LABEL: autoheal worker: <<: *app command: \"./docker/prod/worker\" networks: - backend depends_on: - db - cache - seeder cron: <<: *app command: \"./docker/prod/cron\" networks: - backend depends_on: - db - cache - seeder seeder: <<: *app command: \"./docker/prod/seeder\" restart: on-failure networks: - backend","title":"OpenProject Wiki"},{"location":"Wiki/openproject/#introduction","text":"OpenProject is our comprehensive open-source solution for efficient project management and collaboration. With features like task management, Agile support, real-time communication, and powerful reporting, OpenProject empowers our teams to plan, execute, and succeed in projects of all sizes. Streamline your project workflows, enhance collaboration, and achieve your project goals with our OpenProject platform. This documentation is a comprehensive guide to using OpenProject effectively. Whether you're new to the platform or looking to expand your knowledge, you'll find step-by-step instructions, best practices, and tips to make the most of OpenProject's features.","title":"Introduction"},{"location":"Wiki/openproject/#getting-started","text":"Login to the web interface with the provided credentials to view your home page. From here you can see some of the projects you're owner of or part of, and can select which project you would like to work on.","title":"Getting Started"},{"location":"Wiki/openproject/#overview-pages","text":"OpenProject home page Click on Select a project on the top left side to see the list of projects you own, or are part of, or to create a new project. You may also select to view the list of projects, which will redirect you to a dedicated page listing all projects. The bell icon at the top right allows you to see notifications against your name, such as assigned projects or tasks, changes to tasks you're associated with or are owner of, and any other activity against the tasks. You may expand the item to view more information, as well as Unwatch, Mark as read, make changes to the Assignee, Accountable person and time tracking, as well as other quick actions. On the left side you can see some filters under the Reason section, as well as filter to unread notifications based on the project name Notifications center When selecting a project, you will be brought to the Project Overview screen, where you will be able to quick view the Project description, Status, Details, Members and their roles, and an overview of the Work Packages. Default view of the Work is Type, where you can view number of open or closed work packages. The filter can be changed to show WOrk Package overview of Status, Priority, Author and Assignee. The menu bar on the left allows you to jump to the project working pages, such as Work packages, Time and costs, Members and project settings. The most common page to be working on is the Work packages page Project Overview Projects can be created under another project, for example: If there is large project, it may have multiple sub projects needing to be completed before the overall project can be closed. Sub projects appear indented on the project quick select menu. All sub projects will have their own work packages needing to be completed to close the sub project. A project can also be converted to a template if needed. Example: there are multiple construction projects to be initiated, all including similar work packages, create the one, convert to template and make copies of it for all of the construction projects. They will then all have the same work packages. Each project will be managed separately, and additional work packages can be added to them, or removed from them, based on the project needs. Project quick select list","title":"Overview Pages"},{"location":"Wiki/openproject/#working-on-a-project","text":"Select the project you wish to work on, and select the Work Packages menu. The Project Work packages screen opens. On this page, you can see all work packages as well as their child tasks, status, Assignee and Priority. You will now be able to Add, remove or update work packages. You can change the view depending on your needs, and you can create your own views. From this page you can quickly add work packages from the bottom of the page by clicking on Create new work package, or click on Create and select the Work package type to edit in full screen view. You can quickly edit most fields by clicking into the one you want to edit, and the field will become active to editing. It is recommended to add the Progress %, Start Date and End Date fields to the view for faster viewing and editing from within the page.","title":"Working on a project"},{"location":"Wiki/openproject/#member-assignment","text":"","title":"Member Assignment"},{"location":"Wiki/openproject/#project-settings","text":"","title":"Project Settings"},{"location":"Wiki/openproject/#terminologies","text":"Work Package: A work package is a general term for any task, activity, or item that requires attention within a project. Work packages can represent different types of work, such as tasks, phases, milestones, features, epics, user stories, and bugs. Phase: A phase is a distinct stage or segment of a project's lifecycle. It represents a grouping of related tasks or activities that must be completed before moving on to the next stage. Phases help in organizing and structuring a project's timeline and progress. Milestone: A milestone is a significant event or achievement in a project. It marks a specific point in time or the completion of a critical task. Milestones are often used to track progress and key project dates. Task: A task is a specific action or activity that needs to be completed to achieve a project's objectives. Tasks are usually smaller, manageable units of work that contribute to the overall project progress. Feature: A feature is a high-level functionality or capability that a software or product should have. Features are often used in software development projects to describe the desired functionalities. Epic: An epic is a large, overarching project or initiative that is typically broken down into smaller, more manageable user stories or tasks. Epics help in organizing and prioritizing work in agile project management. User Story: A user story is a user-centric requirement or description of a specific functionality from an end-user's perspective. User stories are commonly used in agile development to define and prioritize work items. Bug: A bug is an issue or problem within a software application that needs to be fixed. Bugs can be reported, tracked, and resolved as work packages to ensure the software's quality and stability. Gantt Chart: Gantt charts in OpenProject provide a visual representation of project timelines and dependencies. Users can create, edit, and customize Gantt charts to plan and schedule tasks and milestones. Dependencies between tasks are indicated by arrows, helping users understand task sequencing. Agile Project Management: OpenProject supports Agile methodologies like Scrum and Kanban. Agile boards allow teams to manage work in progress (WIP), prioritize tasks, and plan sprints. Backlogs store and prioritize user stories or tasks for future iterations. Discussions: Discussions are collaborative threads where team members can exchange ideas, seek clarification, or discuss project-related topics. Users can attach documents and mention others to involve specific team members in the discussion. Discussions are archived for reference, fostering knowledge sharing. Forums: Forums serve as broader discussion areas for project teams or departments. They are ideal for announcements, general updates, and team-wide conversations. Users can subscribe to forums to receive notifications about new posts. Time Tracking: Time tracking in OpenProject allows users to record hours worked on tasks and work packages. Users can specify the date, time spent, and a description of the work done. Time tracking data is useful for project costing, resource allocation, and progress analysis. Custom Fields: Custom fields enable users to tailor work packages and projects to their organization's specific needs. Fields can be created for different data types, such as text, numeric, date, or list fields. Custom fields can be used for tracking unique project-related information. Workflows: Workflows define the life cycle stages of work packages and how they transition from one stage to another. Users can customize workflows to match their project management processes. Workflow automation helps ensure consistency in project execution. User Roles and Permissions: OpenProject defines various user roles, including administrators, project managers, and members. Each role has specific permissions and access levels, ensuring appropriate access to features and data. Roles and permissions can be configured to align with your organization's hierarchy.","title":"Terminologies"},{"location":"Wiki/openproject/#collaboration-and-communication","text":"","title":"Collaboration and Communication"},{"location":"Wiki/openproject/#time-tracking-and-reporting","text":"","title":"Time Tracking and Reporting"},{"location":"Wiki/openproject/#web-time-tracking","text":"","title":"Web Time Tracking"},{"location":"Wiki/openproject/#mobile-application-time-tracking","text":"","title":"Mobile Application Time Tracking"},{"location":"Wiki/openproject/#google-play-store","text":"From Google Play store, search for Open Time Tracker and install the app Google Play Store app Open the app and select Configure Instance. Enter https://projects.wbhsgroup.com as the Base URL and enter the Client ID: VMHppmbUEeWMgPcbpJv1WIeqxRCAJLkPEj3STCaoPdg You will then be requested to login with your OpenProject username and password.","title":"Google Play Store"},{"location":"Wiki/openproject/#reporting","text":"","title":"Reporting"},{"location":"Wiki/openproject/#user-management-and-permissions","text":"","title":"User Management and Permissions"},{"location":"Wiki/openproject/#integration-and-plugins","text":"","title":"Integration and Plugins"},{"location":"Wiki/openproject/#deployment","text":"OpenProject has been deployed on Docker Swarm as a stack. Make sure to define the Volumes first version: \"3.7\" networks: frontend: backend: volumes: pgdata: driver: local driver_opts: type: 'none' device: '/mnt/glusterfs/projects/pgdata/' # Replace this with the local directory you want to mount o: 'bind' opdata: driver: local driver_opts: type: 'none' device: '/mnt/glusterfs/projects/opdata/' # Replace this with the local directory you want to mount o: 'bind' x-op-restart-policy: &restart_policy restart: unless-stopped x-op-image: &image image: openproject/community:13.0.3 x-op-app: &app <<: [*image, *restart_policy] environment: OPENPROJECT_HTTPS: \"${OPENPROJECT_HTTPS:-true}\" OPENPROJECT_HOST__NAME: \"${OPENPROJECT_HOST__NAME:-projects.wbhsgroup.com}\" OPENPROJECT_HSTS: \"${OPENPROJECT_HSTS:-true}\" RAILS_CACHE_STORE: \"memcache\" OPENPROJECT_CACHE__MEMCACHE__SERVER: \"cache:11211\" OPENPROJECT_RAILS__RELATIVE__URL__ROOT: \"${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}\" DATABASE_URL: \"${DATABASE_URL:-postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true}\" RAILS_MIN_THREADS: ${RAILS_MIN_THREADS:-4} RAILS_MAX_THREADS: ${RAILS_MAX_THREADS:-16} IMAP_ENABLED: \"${IMAP_ENABLED:-true}\" volumes: - \"${OPDATA:-opdata}:/var/openproject/assets\" services: db: image: postgres:13.10 <<: *restart_policy stop_grace_period: \"3s\" volumes: - \"${PGDATA:-pgdata}:/var/lib/postgresql/data\" environment: POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-p4ssw0rd} POSTGRES_DB: openproject networks: - backend cache: image: memcached <<: *restart_policy networks: - backend proxy: <<: [*image, *restart_policy] command: \"./docker/prod/proxy\" ports: - \"${PORT:-8080}:80\" environment: APP_HOST: web OPENPROJECT_RAILS__RELATIVE__URL__ROOT: \"${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}\" OPENPROJECT_HOST__NAME: \"projects.wbhsgroup.com\" depends_on: - web networks: - frontend web: <<: *app command: \"./docker/prod/web\" networks: - frontend - backend depends_on: - db - cache - seeder labels: - autoheal=true healthcheck: test: [\"CMD\", \"curl\", \"-f\", \"http://projects.wbhsgroup.com:8080${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}/health_checks/default\"] interval: 10s timeout: 3s retries: 3 start_period: 30s autoheal: image: willfarrell/autoheal:1.2.0 volumes: - \"/var/run/docker.sock:/var/run/docker.sock\" environment: AUTOHEAL_CONTAINER_LABEL: autoheal worker: <<: *app command: \"./docker/prod/worker\" networks: - backend depends_on: - db - cache - seeder cron: <<: *app command: \"./docker/prod/cron\" networks: - backend depends_on: - db - cache - seeder seeder: <<: *app command: \"./docker/prod/seeder\" restart: on-failure networks: - backend","title":"Deployment"},{"location":"Wiki/rport-rmm/","text":"Introduction Web Interface Adding Clients Client Access Token Desktop Setup & Configuration Installing RPort Automated install with pairing code - Windows Login to the RPort RMM web page. Click Profile button on the left access menu (looks like a cog) Click Client Access Find the customer / group client access ID that you intend to install RPort on, and click the 3 dots and click on Install client Click COPY TO CLIPBOARD next to Windows to select the PowerShell script On the client PC, click the Start menu, and type PowerShell. Right click the option and select Run as Administrator Paste the PowerShell script and press enter Read the screen output to ensure that installation was successful Step 5 - Copy the PowerShell script, paste and execute on client PC Automated install with pairing code - Linux Manual install - Windows Download and run the RPort installer: https://downloads.rport.io/rport/stable/latest.php?arch=Windows_x86_64 Copy the client config file from the below Additional Resources section to \"C:\\Program Files\\rport\" folder Click start and type cmd, right click \"Command Prompt\" and run as administrator Paste this line: cd \"C:\\Program Files\\rport\" Paste this line: rport.exe --service install -c rport.conf and confirm that the client appears on the RPort dashboard Paste this line: sc query rport. Read the output to confirm success Paste this line: sc start rport. Read the output to confirm success Login to the RPort server and check under Kaesim that the client has successfully registered Manual install - Linux Manual install - MacOS Installing TightVNC - Windows Installing TightVNC - Linux Installing TightVNC - MacOS Remote Control PC's Remote Script Execution Additional Features Documentation Audit Meta Data Administration Adding Users & Groups Adding Client Groups Creating Client Access Tokens Additional Resources Kaesim Cybersecurity Config file /rport.conf Koruna Assist Config file /rport.conf","title":"RPort RMM Wiki"},{"location":"Wiki/rport-rmm/#introduction","text":"","title":"Introduction"},{"location":"Wiki/rport-rmm/#web-interface","text":"","title":"Web Interface"},{"location":"Wiki/rport-rmm/#adding-clients","text":"","title":"Adding Clients"},{"location":"Wiki/rport-rmm/#client-access-token","text":"","title":"Client Access Token"},{"location":"Wiki/rport-rmm/#desktop-setup-configuration","text":"","title":"Desktop Setup &amp; Configuration"},{"location":"Wiki/rport-rmm/#installing-rport","text":"","title":"Installing RPort"},{"location":"Wiki/rport-rmm/#automated-install-with-pairing-code-windows","text":"Login to the RPort RMM web page. Click Profile button on the left access menu (looks like a cog) Click Client Access Find the customer / group client access ID that you intend to install RPort on, and click the 3 dots and click on Install client Click COPY TO CLIPBOARD next to Windows to select the PowerShell script On the client PC, click the Start menu, and type PowerShell. Right click the option and select Run as Administrator Paste the PowerShell script and press enter Read the screen output to ensure that installation was successful Step 5 - Copy the PowerShell script, paste and execute on client PC","title":"Automated install with pairing code - Windows"},{"location":"Wiki/rport-rmm/#automated-install-with-pairing-code-linux","text":"","title":"Automated install with pairing code - Linux"},{"location":"Wiki/rport-rmm/#manual-install-windows","text":"Download and run the RPort installer: https://downloads.rport.io/rport/stable/latest.php?arch=Windows_x86_64 Copy the client config file from the below Additional Resources section to \"C:\\Program Files\\rport\" folder Click start and type cmd, right click \"Command Prompt\" and run as administrator Paste this line: cd \"C:\\Program Files\\rport\" Paste this line: rport.exe --service install -c rport.conf and confirm that the client appears on the RPort dashboard Paste this line: sc query rport. Read the output to confirm success Paste this line: sc start rport. Read the output to confirm success Login to the RPort server and check under Kaesim that the client has successfully registered","title":"Manual install - Windows"},{"location":"Wiki/rport-rmm/#manual-install-linux","text":"","title":"Manual install - Linux"},{"location":"Wiki/rport-rmm/#manual-install-macos","text":"","title":"Manual install - MacOS"},{"location":"Wiki/rport-rmm/#installing-tightvnc-windows","text":"","title":"Installing TightVNC - Windows"},{"location":"Wiki/rport-rmm/#installing-tightvnc-linux","text":"","title":"Installing TightVNC - Linux"},{"location":"Wiki/rport-rmm/#installing-tightvnc-macos","text":"","title":"Installing TightVNC - MacOS"},{"location":"Wiki/rport-rmm/#remote-control-pcs","text":"","title":"Remote Control PC's"},{"location":"Wiki/rport-rmm/#remote-script-execution","text":"","title":"Remote Script Execution"},{"location":"Wiki/rport-rmm/#additional-features","text":"","title":"Additional Features"},{"location":"Wiki/rport-rmm/#documentation","text":"","title":"Documentation"},{"location":"Wiki/rport-rmm/#audit","text":"","title":"Audit"},{"location":"Wiki/rport-rmm/#meta-data","text":"","title":"Meta Data"},{"location":"Wiki/rport-rmm/#administration","text":"","title":"Administration"},{"location":"Wiki/rport-rmm/#adding-users-groups","text":"","title":"Adding Users &amp; Groups"},{"location":"Wiki/rport-rmm/#adding-client-groups","text":"","title":"Adding Client Groups"},{"location":"Wiki/rport-rmm/#creating-client-access-tokens","text":"","title":"Creating Client Access Tokens"},{"location":"Wiki/rport-rmm/#additional-resources","text":"Kaesim Cybersecurity Config file /rport.conf Koruna Assist Config file /rport.conf","title":"Additional Resources"},{"location":"Wiki/vaultwarden-secretsvault/","text":"Header Your content here","title":"Vaultwarden Secretsvault Wiki"},{"location":"Wiki/vaultwarden-secretsvault/#header","text":"Your content here","title":"Header"},{"location":"Wiki/wireguard-vpn/","text":"Introduction Wireguard VPN is used for clients who need to access websites that are geo-locked. Currently Polaris Solutions IT Consultancy has 2 VPN servers. One terminating in Australia, and one terminating in Singapore. Initial plan was to have all staff using Wireguard VPN to protect data and add anonymity. Future plan is to transition to Secure DNS, hosted in Singapore. The Australia VPN service will remain for those staff who need access to Austraila based geo-blocked websites. Server Installation Overview: Current Infrastructure AWS provided network segments Part 1: Prerequisites sudo apt update && sudo apt upgrade -y && sudo apt install ufw wireguard -y #Install the wireguard and firewall packages sudo ufw allow ssh && sudo ufw allow 51820/udp && sudo ufw allow 51822/udp && sudo ufw enable #Enable and allow Wireguard ports sudo sysctl -w net.ipv4.ip_forward=1 && sudo sysctl -p /etc/sysctl.conf #Allows traffic forwarding sudo su #Change to root user cd /etc/wireguard/ && umask 077 && wg genkey | tee privatekey | wg pubkey > publickey #Generate private and public keys cat privatekey && cat publickey #Note the private and public key nano /etc/wireguard/wg2.conf Notes The private key should not be shared, and is only used in the server config of the wg interface The server public key is used on the client side to authenticate the client to the server associated to the port number. Each client must have their own wg config file, and thus their own Listen Port. Refer to the Cheat Sheet for more info. Decide on a network segment for the new profile being created. Subnet calculator can be found here. Cheat sheet Server IP Interface Entity using Port Number IP Subnet Public Key 18.139.67.154 wg0 WBHS Group Servers 51820 172.31.33.1/25 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg1 WBHS Group Employees 51821 172.31.33.1/25 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg2 Koruna Assist 51822 172.31.35.1/24 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg3 Kaesim Cybersecurity 51823 172.31.36.1/24 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 13.239.127.37 wg2 Koruna Assist 51822 172.31.24.1/24 saHlWMKUAmb1/Ovx+p68mWinSevsA59QWg7zPb6kHE4= Part 2: VPN Profiles - Config Files Singapore wg0: WBHS Group Servers root@ip-172-31-39-3:/home/ubuntu# cat /etc/wireguard/wg0.conf ## WBHS Group Servers ## [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.33.1/25 PostUp = ufw route allow in on wg0 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg0 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51820 ## William Asus ## [Peer] PublicKey = Z2eBbA4R/dNh0G+kyGVYO8VkprL5sa+Tl9MQTae4BC0= AllowedIPs = 172.31.33.5/32 wg1: WBHS Group Employees root@ip-172-31-39-3:/home/ubuntu# cat /etc/wireguard/wg1.conf ################ ## WBHS Group ## ################ [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.33.1/25 PostUp = ufw route allow in on wg0 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg0 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51821 [Peer] PublicKey = QI/nG/PNyCmKNKGlcd4vxkrzJlGQ9OnwSKgwMblGqBA= AllowedIPs = 172.31.33.2/32 wg2: Koruna Assist ################### ## Koruna Assist ## ################### [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.35.1/24 PostUp = ufw route allow in on wg2 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg2 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51822 [Peer] PublicKey = +O4J5vJB4abyRHlAJFfWZ2ckB4SimcuVTJZ8LaKUTg8= AllowedIPs = 172.31.35.11/32 wg3: Kaesim Cybersecurity ########################### ## Kaesim Cyber Security ## ########################### [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.36.1/24 PostUp = ufw route allow in on wg3 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg3 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51823 ## Gabi ## [Peer] PublicKey = YbL29Qo35FUduOoUUGHsKWxpwrG3m6LGP7BDRXS7QGw= AllowedIPs = 172.31.36.11/32 Australia wg2: Koruna Assist root@ip-172-31-22-132:/home/ubuntu# cat /etc/wireguard/wg2.conf ################### ## Koruna Assist ## ################### [Interface] PrivateKey = wEThIL/bIb7k/skZJu2ltFeyjaQbRUv8p8sDrk9OGX0= Address = 172.31.24.1/24 PostUp = ufw route allow in on wg2 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg2 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51822 ## Andreana Del Milana ## [Peer] PublicKey = usS3M5SHMrd2GgkltFk3WWJ8McR5yBa8pJcQcnUOUAA= AllowedIPs = 172.31.24.11/32 Notes Comment every new wg config file to indicate the purpose. Also, comment every profile to indicate the user Client Installation Windows Clients Windows Installer Run the installation, making sure to run the as a service. Click Create new empty tunnel Configuring VPN Tunnel Base client config Address = xxx.xxx.xxx.xxx/xx DNS = 1.1.1.1 [Peer] PublicKey = //**SERVER-PUBLIC-KEY**// AllowedIPs = 0.0.0.0/0 Endpoint = xxx.xxx.xxx.xxx:518xx Address corresponds to Client subnet Endpoint refers to the Server the Client will connect to. The port will correspond to the Client VPN profile Linux Clients Linux clients should be done via config file. Server Side Client Addition","title":"Wireguard VPN"},{"location":"Wiki/wireguard-vpn/#introduction","text":"Wireguard VPN is used for clients who need to access websites that are geo-locked. Currently Polaris Solutions IT Consultancy has 2 VPN servers. One terminating in Australia, and one terminating in Singapore. Initial plan was to have all staff using Wireguard VPN to protect data and add anonymity. Future plan is to transition to Secure DNS, hosted in Singapore. The Australia VPN service will remain for those staff who need access to Austraila based geo-blocked websites.","title":"Introduction"},{"location":"Wiki/wireguard-vpn/#server-installation","text":"","title":"Server Installation"},{"location":"Wiki/wireguard-vpn/#overview-current-infrastructure","text":"AWS provided network segments","title":"Overview: Current Infrastructure"},{"location":"Wiki/wireguard-vpn/#part-1-prerequisites","text":"sudo apt update && sudo apt upgrade -y && sudo apt install ufw wireguard -y #Install the wireguard and firewall packages sudo ufw allow ssh && sudo ufw allow 51820/udp && sudo ufw allow 51822/udp && sudo ufw enable #Enable and allow Wireguard ports sudo sysctl -w net.ipv4.ip_forward=1 && sudo sysctl -p /etc/sysctl.conf #Allows traffic forwarding sudo su #Change to root user cd /etc/wireguard/ && umask 077 && wg genkey | tee privatekey | wg pubkey > publickey #Generate private and public keys cat privatekey && cat publickey #Note the private and public key nano /etc/wireguard/wg2.conf","title":"Part 1: Prerequisites"},{"location":"Wiki/wireguard-vpn/#notes","text":"The private key should not be shared, and is only used in the server config of the wg interface The server public key is used on the client side to authenticate the client to the server associated to the port number. Each client must have their own wg config file, and thus their own Listen Port. Refer to the Cheat Sheet for more info. Decide on a network segment for the new profile being created. Subnet calculator can be found here.","title":"Notes"},{"location":"Wiki/wireguard-vpn/#cheat-sheet","text":"Server IP Interface Entity using Port Number IP Subnet Public Key 18.139.67.154 wg0 WBHS Group Servers 51820 172.31.33.1/25 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg1 WBHS Group Employees 51821 172.31.33.1/25 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg2 Koruna Assist 51822 172.31.35.1/24 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 18.139.67.154 wg3 Kaesim Cybersecurity 51823 172.31.36.1/24 N8JhuYZ6vSU2qHU+B0w9l8oW9rKQDKIsmjBV05aavSI= 13.239.127.37 wg2 Koruna Assist 51822 172.31.24.1/24 saHlWMKUAmb1/Ovx+p68mWinSevsA59QWg7zPb6kHE4=","title":"Cheat sheet"},{"location":"Wiki/wireguard-vpn/#part-2-vpn-profiles-config-files","text":"","title":"Part 2: VPN Profiles - Config Files"},{"location":"Wiki/wireguard-vpn/#singapore","text":"","title":"Singapore"},{"location":"Wiki/wireguard-vpn/#wg0-wbhs-group-servers","text":"root@ip-172-31-39-3:/home/ubuntu# cat /etc/wireguard/wg0.conf ## WBHS Group Servers ## [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.33.1/25 PostUp = ufw route allow in on wg0 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg0 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51820 ## William Asus ## [Peer] PublicKey = Z2eBbA4R/dNh0G+kyGVYO8VkprL5sa+Tl9MQTae4BC0= AllowedIPs = 172.31.33.5/32","title":"wg0: WBHS Group Servers"},{"location":"Wiki/wireguard-vpn/#wg1-wbhs-group-employees","text":"root@ip-172-31-39-3:/home/ubuntu# cat /etc/wireguard/wg1.conf ################ ## WBHS Group ## ################ [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.33.1/25 PostUp = ufw route allow in on wg0 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg0 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51821 [Peer] PublicKey = QI/nG/PNyCmKNKGlcd4vxkrzJlGQ9OnwSKgwMblGqBA= AllowedIPs = 172.31.33.2/32","title":"wg1: WBHS Group Employees"},{"location":"Wiki/wireguard-vpn/#wg2-koruna-assist","text":"################### ## Koruna Assist ## ################### [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.35.1/24 PostUp = ufw route allow in on wg2 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg2 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51822 [Peer] PublicKey = +O4J5vJB4abyRHlAJFfWZ2ckB4SimcuVTJZ8LaKUTg8= AllowedIPs = 172.31.35.11/32","title":"wg2: Koruna Assist"},{"location":"Wiki/wireguard-vpn/#wg3-kaesim-cybersecurity","text":"########################### ## Kaesim Cyber Security ## ########################### [Interface] PrivateKey = aBjBoLGIuYXqiS7ifTbQ8PNe6pzVflYLK095ugL2OGA= Address = 172.31.36.1/24 PostUp = ufw route allow in on wg3 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg3 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51823 ## Gabi ## [Peer] PublicKey = YbL29Qo35FUduOoUUGHsKWxpwrG3m6LGP7BDRXS7QGw= AllowedIPs = 172.31.36.11/32","title":"wg3: Kaesim Cybersecurity"},{"location":"Wiki/wireguard-vpn/#australia","text":"","title":"Australia"},{"location":"Wiki/wireguard-vpn/#wg2-koruna-assist_1","text":"root@ip-172-31-22-132:/home/ubuntu# cat /etc/wireguard/wg2.conf ################### ## Koruna Assist ## ################### [Interface] PrivateKey = wEThIL/bIb7k/skZJu2ltFeyjaQbRUv8p8sDrk9OGX0= Address = 172.31.24.1/24 PostUp = ufw route allow in on wg2 out on ens5 PostUp = iptables -t nat -I POSTROUTING -o ens5 -j MASQUERADE PreDown = ufw route delete allow in on wg2 out on ens5 PreDown = iptables -t nat -D POSTROUTING -o ens5 -j MASQUERADE ListenPort = 51822 ## Andreana Del Milana ## [Peer] PublicKey = usS3M5SHMrd2GgkltFk3WWJ8McR5yBa8pJcQcnUOUAA= AllowedIPs = 172.31.24.11/32","title":"wg2: Koruna Assist"},{"location":"Wiki/wireguard-vpn/#notes_1","text":"Comment every new wg config file to indicate the purpose. Also, comment every profile to indicate the user","title":"Notes"},{"location":"Wiki/wireguard-vpn/#client-installation","text":"","title":"Client Installation"},{"location":"Wiki/wireguard-vpn/#windows-clients","text":"Windows Installer Run the installation, making sure to run the as a service. Click Create new empty tunnel Configuring VPN Tunnel","title":"Windows Clients"},{"location":"Wiki/wireguard-vpn/#base-client-config","text":"Address = xxx.xxx.xxx.xxx/xx DNS = 1.1.1.1 [Peer] PublicKey = //**SERVER-PUBLIC-KEY**// AllowedIPs = 0.0.0.0/0 Endpoint = xxx.xxx.xxx.xxx:518xx Address corresponds to Client subnet Endpoint refers to the Server the Client will connect to. The port will correspond to the Client VPN profile","title":"Base client config"},{"location":"Wiki/wireguard-vpn/#linux-clients","text":"Linux clients should be done via config file.","title":"Linux Clients"},{"location":"Wiki/wireguard-vpn/#server-side-client-addition","text":"","title":"Server Side Client Addition"}]}